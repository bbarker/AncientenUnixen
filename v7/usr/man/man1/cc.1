.TH CC 1  PDP11
.SH NAME
cc, pcc \- C compiler
.SH SYNOPSIS
.B cc
[ option ] ... file ...
.PP
.B pcc
[ option ] ... file ...
.SH DESCRIPTION
.I Cc
is the UNIX C compiler.
It accepts several types of arguments:
.PP
Arguments whose names end with `.c' are taken to be
C source programs; they are compiled, and
each object program is left on the file
whose name is that of the source with `.o' substituted
for `.c'.
The `.o' file is normally deleted, however, if a single
C program is compiled and loaded all at one go.
.PP
In the same way,
arguments whose names end with `.s' are taken to be assembly source programs
and are assembled, producing a `.o' file.
.PP
The following options are interpreted by
.IR cc .
See
.IR ld (1)
for load-time options.
.TP 8
.B \-c
Suppress the loading phase of the compilation, and force
an object file to be produced even if only one program is compiled.
.TP
.B \-p
Arrange for the compiler to produce code
which counts the number of times each routine is called;
also, if loading takes place, replace the standard startup
routine by one which automatically calls
.IR monitor (3)
at the start and arranges to write out a
.I mon.out
file at normal termination of execution of the object program.
An execution profile can then be generated by
use of
.IR  prof (1).
.TP
.B \-f
In systems without hardware floating-point,
use a version of the C compiler which handles floating-point
constants and
loads the object program with the floating-point interpreter.
Do not use if the hardware is present.
.TP
.SM
.B \-O
Invoke an
object-code optimizer.
.TP
.SM
.B \-S
Compile the named C programs, and leave the
assembler-language output on corresponding files suffixed `.s'.
.TP
.SM
.B \-P
Run only the macro preprocessor and place the result for
each `.c' file in a corresponding `.i' file
and has no `#' lines in it.
.TP
.SM
.B \-E
Run only the macro preprocessor
and send the result to the
standard output.
The output is intended for compiler debugging; it 
is unacceptable as input to
.IR cc .
.TP
.BI \-o " output"
Name the final output file
.IR output .
If this option is used the file `a.out' will be left undisturbed.
.TP
.BI \-D name=def
.br
.ns
.TP
.SM
.BI \-D \*Sname
Define the
.I name
to the preprocessor,
as if by
`#define'.
If no definition is given, the name is defined as 1.
.TP
.SM
.BI \-U \*Sname
Remove any initial definition of
.IR name .
.TP
.SM
.BI \-I \*Sdir
`#include' files
whose names do not begin with `/' are always
sought first in the directory 
of the
.I file
argument,
then in directories named in 
.B \-I
options,
then in directories on a standard list.
.TP
.SM
.BI \-B \*Sstring
Find substitute compiler passes in the files named
.I string
with the suffixes cpp, c0, c1 and c2.
If 
.I string 
is empty, use a standard backup version.
.TP
.BR \-t [ p012 ]
Find only the designated compiler passes in the
files whose names are constructed by a
.B \-B
option.
In the absence of a
.B \-B 
option, the
.I string
is taken to be `/usr/c/'.
.PP
Other arguments
are taken
to be either loader option arguments, or C-compatible
object programs, typically produced by an earlier
.I cc
run,
or perhaps libraries of C-compatible routines.
These programs, together with the results of any
compilations specified, are loaded (in the order
given) to produce an executable program with name
.B a.out.
.PP
The major purpose of the `portable C compiler',
.I pcc,
is to serve as a model
on which to base other compilers.
.I Pcc
does not support options
.BR \-f ,
.BR \-E ,
.BR \-B ,
and
.BR \-t .
It provides, in addition to the language of
.I cc,
unsigned char type data and initialized bit fields.
.SH FILES
.ta \w'/usr/c/oc[102]  'u
file.c	input file
.br
file.o	object file
.br
a.out	loaded output
.br
/tmp/ctm?	temporaries for
.I cc
.br
/lib/cpp	preprocessor
.br
/lib/c[01]	compiler for
.I cc
.br
/usr/c/oc[012]	backup compiler for
.I cc
.br
/usr/c/ocpp	backup preprocessor
.br
/lib/fc[01]	floating-point compiler
.br
/lib/c2	optional optimizer
.br
/lib/crt0.o	runtime startoff
.br
/lib/mcrt0.o	startoff for profiling
.br
/lib/fcrt0.o	startoff for floating-point interpretation
.br
/lib/libc.a	standard library, see
.IR intro (3)
.br
/usr/include	standard directory for `#include' files
.br
/tmp/pc*	temporaries for
.I pcc
.br
/usr/lib/ccom	compiler for
.I pcc
.SH "SEE ALSO"
B. W. Kernighan and D. M. Ritchie,
.I The C Programming Language,
Prentice-Hall,
1978
.br
D. M. Ritchie,
.I
C Reference Manual
.br
monitor(3), prof(1), adb(1), ld(1)
.SH DIAGNOSTICS
The diagnostics produced by C itself are intended to be
self-explanatory.
Occasional messages may be produced by the assembler
or loader.
Of these, the most mystifying are from the assembler,
.IR as (1),
in particular `m', which means
a multiply-defined external symbol (function
or data).
.SH BUGS
.I Pcc
is little tried on the PDP11; specialized
code generated for that machine has not been
well shaken down.
The
.B \-O
optimizer was designed to work with
.IR cc ;
its use with
.I pcc
is suspect.
