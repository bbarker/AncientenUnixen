.h0 "A. Hardware"
.in0
.sp
U\s8NIX\s10 runs on 
a DEC PDP11/40*, 11/45 or 11/70
with at least the following equipment:
.in+5
.nf
48K to 124K words of managed memory: parity not used,
disk: RP03, RP04, RK05(preferably 2) or equivalent,
console typewriter,
clock: KW11-L or KW11-P,
extended instruction set KE11-E, on 11/40 only.
.in -5
.fi
The system is normally distributed on 9-track tape or RK05 packs.
.br
The following equipment is strongly recommended:
.in +5
.nf
communications controllers such as DL11, DC11 or DH11,
full duplex 96-character ASCII terminals,
9-track tape, or extra disk for system backup.
.in-5
.fi
The minimum memory and disk space specified is enough to run
and maintain U\s8NIX\s10.
More will be needed to keep all source on line, or to handle
a large number of users,
big data bases, diversified complements of devices, or large
programs.
U\s8NIX\s10 
does swapping and reentrant sharing
of user code to minimize main memory requirements.
The resident code of U\s8NIX\s10 occupies 20-22K depending
on configuration.
.sp
An 11/40 is not advisable for heavy floating point
work, as U\s8NIX\s10 on this hardware uses interpreted 11/45 floating point.
.h0 "B. Software"
.sp
All the programs available as U\s8NIX\s10
commands are listed.
Every command, including all options, is issued as just one
line, unless specifically noted as \*(lqinteractive\*(rq.
Interactive programs can be made to run from a prepared script
simply by redirecting input.
.sp
File processing commands
that go from standard input to standard output
are noted as usable as filters.
The piping facility of the Shell may be used
to connect filters directly to the input or output
of other programs.
.sp
Commercially distributed U\s8NIX\s10
normally excludes software listed
in Section 5, ``Typesetting.''
Source code is included except as noted.
.h0 "\n+a Basic Software"
.nr b 0
.sp
This package
includes time-sharing operating
system with utilities, machine language assembler and the 
compiler for the programming language C\(emenough
software to
write and run new applications
and to maintain or modify U\s8NIX\s10 itself.
.h0 "\na.\n+b Operating System"
.sh UNIX
The basic resident code
on which everything else depends.
Supports the system calls, and maintains the file system.
A general description of U\s8NIX\s10 design
philosophy and system facilities appeared in
the Communications of the ACM, July, 1974.
Further capabilities include:
.op
Automatically supported reentrant code.
.op
Separate instruction and data spaces on 11/45 and 11/70.
.op
``Group'' access permissions allow cooperative projects,
with overlapping memberships.
.op
Timer-interrupt sampling and interprocess monitoring
for debugging and measurement.
.sh Manual
Printed manuals for U\s8NIX\s10 and all its software,
except where other manuals exist.
.op
U\s8NIX\s10 Programmer's Manual.
.op
The U\s8NIX\s10 Time-Sharing System, reprint setting forth
design principles.
.op
U\s8NIX\s10 for Beginners.
.op
The U\s8NIX\s10 I-O System.
.op
On the Security of U\s8NIX\s10.
.sh (DEV)
All I/O is logically synchronous.
Normally, invisible buffering makes all physical
record structure transparent and exploits the
hardware's ability to do overlapped I/O.
Unbuffered physical record
I/O is available for unusual applications.
Drivers for these devices are
available; others can be easily written:
.op
Asynchronous interfaces: DC11, DH11, DL11.
Support for most common ASCII terminals.
.op
Synchronous interface: DP11.
.op
Automatic calling unit interface: DN11.
.op
Line printer: LP11.
.op
Magnetic tape: TU10 and TU16.
.op
DECtape*: TC11.
.op
Paper tape: PC11.
.op
Fixed head disk: RS11, RS03 and RS04.
.op
Pack type disk: RP03 and RP04, one or more logical
devices per physical device,
minimum-latency seek scheduling.
.op
Cartridge-type disk: RK05, one or more physical devices per
logical device.
.op
Null device.
.op
Physical memory of PDP11, or mapped memory in resident system.
.op
Phototypesetter: Graphic Systems System/1 through DR11C.
.op
Voice synthesizer: V\s8OTRAX\s10* through DC11.
Includes T\s8OUCH\s10-T\s8ONE\s10\(rg input.
.sh BOOT
Procedures to get U\s8NIX\s10 up
on a naked machine.
.sh Manual
Setting up U\s8NIX\s10.
.sh MKCONF
Tailor device-dependent system code to hardware configuration.
Other changes, such as optimal
assignment of directories to devices, inclusion of floating
point simulator, or installation of device names in file system
can then be made at leisure.
(As distributed, U\s8NIX\s10 can 
be brought up directly on any acceptable CPU
with any acceptable disk, any sufficient amount of core
and either clock.)
.sh Manual
Printed manual on setting up U\s8NIX\s10.
