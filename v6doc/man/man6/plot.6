.th PLOT VI 3/10/75
.sh NAME
plot: tek, gsip, vt0 \*- graphics filters
.sh SYNOPSIS
source |
.bd tek
.br
source |
.bd gsip
.br
source |
.bd vt0
.sh DESCRIPTION
These commands produce graphical output on the Tektronix 4014 terminal,
the GSI or other Diablo-mechanism terminals,
and the on-line storage scope respectively.
They read the standard input to obtain
plotting instructions,
which are usually generated by a program
calling the graphics subroutines
described in
.it plot
(VII).
Each instruction consists of an ASCII letter
usually followed by binary information.
A plotting coordinate is transmitted
as four bytes representing
the
.it x
and
.it y
values;
each value
is a signed number transmitted low-order byte first.
The assumed plotting space is set by request.
The instructions are taken from
.s3
.lp +3 3
m	move: the next four bytes specify the coordinates of a point
to move to.
This is used before writing a label.
.s3
.lp +3 3
p	point: the next four bytes specify the coordinates at which a point is drawn.
.s3
.lp +3 3
l	line: the next eight bytes are taken as two pairs of coordinates
specifying the endpoints of a line to be drawn.
.s3
.lp +3 3
t	label: the bytes up to a new-line are written as ASCII
starting at the last point drawn or moved to.
.s3
.lp +3 3
a	arc:
the first four bytes specify the center, the next four specify the
starting point,
and the last four specify the end point of a circular arc.
The least significant coordinate of the end point is
used only to determine the quadrant.
The arc is drawn counter-clockwise.
This command is not necessarily implemented on all
(or even any)
of the output devices.
.s3
.lp +3 3
c	circle:
The first four bytes specify the center of the circle,
the next two the radius.
.s3
.lp +3 3
e	erases the screen
.s3
.lp +3 3
f	linemod: takes the following string as the type for all
future lines.
The types are
`dotted,'
`solid,' `longdashed,' `shortdashed,' and `dotdashed.'
This instruction is effective only with the Tektronix
terminal.
.s3
.lp +3 3
d	dotline: takes the first four bytes as the coordinates
of the beginning of a dotted line.
The next two are a signed x-increment, and the next two
are a word count.
Following are the indicated number of byte-pairs
representing words.
For each bit in this list of words a point is plotted
which is visible if the bit is `1,' invisible if not.
Each point is offset rightward by the x-increment.
The instruction is effective only on the vt0 scope.
.s3
.i0
.sh "SEE ALSO"
plot (VII), graph (VI)
.sh BUGS
